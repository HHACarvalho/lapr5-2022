{
	"info": {
		"_postman_id": "46f7933a-bd9b-45f9-b6c2-04466d822971",
		"name": "TruckTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23885197"
	},
	"item": [
		{
			"name": "1. Get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Truck not found.\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res).to.eql(\"Truck not found.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/truck?ls=AA-88-AA",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"truck"
					],
					"query": [
						{
							"key": "ls",
							"value": "AA-88-AA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Truck created successfully.\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res.truckDTO.licensePlate).to.eql(\"AA-88-AA\");\r",
							"    pm.expect(res.truckDTO.autonomy).to.eql(420);\r",
							"    pm.expect(res.truckDTO.capacityCargo).to.eql(1000);\r",
							"    pm.expect(res.truckDTO.capacityTransportation).to.eql(1000);\r",
							"    pm.expect(res.truckDTO.battery).to.eql(100);\r",
							"    pm.expect(res.truckDTO.tare).to.eql(1250);\r",
							"    pm.expect(res.token).to.eql(\"Truck created successfully.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"licensePlate\": \"AA-88-AA\",\r\n    \"autonomy\": 420,\r\n    \"capacityCargo\": 1000,\r\n    \"capacityTransportation\": 1000,\r\n    \"battery\": 100,\r\n    \"tare\": 1250\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/truck/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"truck",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Create Duplicate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Truck already exists.\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res).to.eql(\"Truck already exists with licensePlate=AA-88-AA\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"licensePlate\": \"AA-88-AA\",\r\n    \"autonomy\": 420,\r\n    \"capacityCargo\": 1000,\r\n    \"capacityTransportation\": 1000,\r\n    \"battery\": 100,\r\n    \"tare\": 1250\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/truck/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"truck",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Truck created successfully.\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res.licensePlate).to.eql(\"AA-88-AA\");\r",
							"    pm.expect(res.autonomy).to.eql(420);\r",
							"    pm.expect(res.capacityCargo).to.eql(1000);\r",
							"    pm.expect(res.capacityTransportation).to.eql(1000);\r",
							"    pm.expect(res.battery).to.eql(100);\r",
							"    pm.expect(res.tare).to.eql(1250);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/truck?ls=AA-88-AA",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"truck"
					],
					"query": [
						{
							"key": "ls",
							"value": "AA-88-AA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4. Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Truck updated successfully.\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res.truckDTO.licensePlate).to.eql(\"AA-88-AA\");\r",
							"    pm.expect(res.truckDTO.autonomy).to.eql(666);\r",
							"    pm.expect(res.truckDTO.capacityCargo).to.eql(1000);\r",
							"    pm.expect(res.truckDTO.capacityTransportation).to.eql(1000);\r",
							"    pm.expect(res.truckDTO.battery).to.eql(100);\r",
							"    pm.expect(res.truckDTO.tare).to.eql(1250);\r",
							"    pm.expect(res.token).to.eql(\"Truck updated successfully.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"licensePlate\": \"AA-88-AA\",\r\n    \"autonomy\": 666,\r\n    \"capacityCargo\": 1000,\r\n    \"capacityTransportation\": 1000,\r\n    \"battery\": 100,\r\n    \"tare\": 1250\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/truck/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"truck",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "4. Update (No ID match)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Truck not found.\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res).to.eql(\"Truck not found with licensePlate=AA-88-AB\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"licensePlate\": \"AA-88-AB\",\r\n    \"autonomy\": 666,\r\n    \"capacityCargo\": 1000,\r\n    \"capacityTransportation\": 1000,\r\n    \"battery\": 100,\r\n    \"tare\": 1250\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/truck/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"truck",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "5. Get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Truck updated successfully.\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res.licensePlate).to.eql(\"AA-88-AA\");\r",
							"    pm.expect(res.autonomy).to.eql(666);\r",
							"    pm.expect(res.capacityCargo).to.eql(1000);\r",
							"    pm.expect(res.capacityTransportation).to.eql(1000);\r",
							"    pm.expect(res.battery).to.eql(100);\r",
							"    pm.expect(res.tare).to.eql(1250);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/truck?ls=AA-88-AA",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"truck"
					],
					"query": [
						{
							"key": "ls",
							"value": "AA-88-AA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "6. Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Truck deleted successfully.\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res.truckDTO.licensePlate).to.eql(\"AA-88-AA\");\r",
							"    pm.expect(res.truckDTO.autonomy).to.eql(666);\r",
							"    pm.expect(res.truckDTO.capacityCargo).to.eql(1000);\r",
							"    pm.expect(res.truckDTO.capacityTransportation).to.eql(1000);\r",
							"    pm.expect(res.truckDTO.battery).to.eql(100);\r",
							"    pm.expect(res.truckDTO.tare).to.eql(1250);\r",
							"    pm.expect(res.token).to.eql(\"Truck deleted successfully.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/truck?ls=AA-88-AA",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"truck"
					],
					"query": [
						{
							"key": "ls",
							"value": "AA-88-AA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "6. Delete Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Truck not found.\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res).to.eql(\"Truck not found.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/truck?ls=AA-88-AA",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"truck"
					],
					"query": [
						{
							"key": "ls",
							"value": "AA-88-AA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "7. Get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Truck not found.\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res).to.eql(\"Truck not found.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/truck?ls=AA-88-AA",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"truck"
					],
					"query": [
						{
							"key": "ls",
							"value": "AA-88-AA"
						}
					]
				}
			},
			"response": []
		}
	]
}